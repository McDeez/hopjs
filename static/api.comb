if(typeof Hop=="undefined")
  Hop={}

Hop.onAJAXSuccess=function(data, textStatus, xhr,onComplete,methodName){
  	if(xhr.status==200){ 
			onComplete(null, data); 
			//$(document).trigger(methodName,data); 
		} else console.log(arguments); 
	}

Hop.onAJAXError=function(xhr, textStatus, errorThrown,onComplete,methodName){
		if(xhr.status==200){
			onComplete(null,xhr.responseText); 
		} else if(xhr.status==404){ 
			onComplete(null,null); 
		} else if(xhr && xhr.responseText && xhr.responseText.length>0){ 
			onComplete(xhr.responseText) 
		} else if(xhr.status==0){ 
			_xhr=xhr; 
			_errorThrown=errorThrown; 
			console.log('Server Error',methodName,xhr,errorThrown,textStatus); 
			onComplete('Error contacting server'); 
		} else console.log(arguments);  
	}

Hop.validateInput=function(input,params){
		var output = {};
		for(var paramName in params){
			var param = params[paramName];
			if(param.demand && input[paramName]==undefined)
				throw ("Required parameter '"+paramName+"' is missing");
			output[paramName]=input[paramName];
		}
		return output;
	}

Hop.patchURL=function(input,url,params){
		for(var paramName in params){
			var param = params[paramName];

			url = url.replace(":"+paramName,input[paramName]);
		}
		return url;
	}

Hop.remoteExec=function(methodName,type,url,options,params,input,onComplete){
		if(typeof input=="function" && typeof onComplete=="undefined"){
			onComplete=input;
			input=null;
		}
		input=input||{};
		options=options||{};
		onComplete=onComplete||function(err,res){
			console.log("debug:",err,res);
		};
		try {
			input = Hop.validateInput(input,params);
			url=Hop.patchURL(input,url,params);
		} catch(e){
			return onComplete(e.toString());
		}
		if(options.noCache){
			input._when=(new Date().getTime())
		}
		if(type=="post" || type=="put" || type=="delete"){
			<% if(_csrf!=undefined){%>
				input._csrf=<%=JSON.stringify(_csrf)%>;
				input.csrf=<%=JSON.stringify(_csrf)%>;
			<%}%>
		}
		if(type=="post" && typeof FormData!="undefined"){	
			var xhr = new XMLHttpRequest();
			var form = new FormData();
			for(var i in input){
				form.append(i,input[i]);
			}	
			xhr.open(type,url);
			xhr.responseType="text";	
			xhr.onreadystatechange=function(){
				if(xhr.readyState==4){
					var value=xhr.response;
					if(typeof xhr.response=="string"){
						try {
							value = JSON.parse(xhr.response);	
						} catch (e){
						}
					}
					if(xhr.status==200 && xhr.response!=null){
						Hop.onAJAXSuccess(value,xhr.statusText,xhr,onComplete,methodName);	
					} else {
						Hop.onAJAXError(xhr,xhr.statusText,xhr.responseText,onComplete,methodName);
					}
				}
			}	
			xhr.send(form);	
		} else {
			$.ajax(url,{
				type:type,
				data:input,
				dataType:"json",
				success: function(data, textStatus, jqXHR){ Hop.onAJAXSuccess(data, textStatus, jqXHR,onComplete,methodName); },
				error: function(jqXHR, textStatus, errorThrown){ Hop.onAJAXError(jqXHR, textStatus, errorThrown,onComplete,methodName); },
			});
		}

	}

<%= Hop.renderBeforeTemplates("JavaScript",{}) %>


<% for(var i in Objects){ %>
<% var obj = Objects[i] %>

<%= obj.renderBeforeTemplates("JavaScript",{ object: obj}) %>


<%=obj.name %>={};
<% for(var methodName in obj.methods){ %>
<% var method = obj.methods[methodName]; %>

<%= method.renderBeforeTemplates("JavaScript",{ method: method}) %>


<%=obj.name%>.<%=methodName%>=function(input,onComplete){
	var params = <%= JSON.stringify(method.params) %>;
	Hop.remoteExec("<%=obj.name%>.<%=methodName%>","<%=method.method%>","<%=method.getPath()%>",<%= JSON.stringify(method.options) %>,params,input,onComplete);
}

<%= method.renderAfterTemplates("JavaScript",{ method: method}) %>

<% } %>
			
<%= obj.renderAfterTemplates("JavaScript",{ object: obj}) %>

<% } %>

<%= Hop.renderAfterTemplates("JavaScript",{}) %>

