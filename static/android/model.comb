package <%=package%>;

import java.util.*;
import com.google.gson.JsonElement;

public class <%=Hop.camelHump(model.name)%> extends JSObject {

	<% for(var i in model.fields){ %>
	<% var field = model.fields[i]; %>
	<% var type = field.toJavaType(); %>
	
	public boolean is<%=Hop.camelHump(field.name)%>Defined(){
		return this.isDefined("<%=field.name%>");
	}


	public <%=type%> <%=(field.type!=Boolean?"get":"is")%><%=Hop.camelHump(field.name)%>(){
		return (<%=type%>) this.get("<%=field.name%>");
	}
	public void set<%=Hop.camelHump(field.name)%>(<%=type%> value){
		this.put("<%=field.name%>",(Object) value);
	}
	<% } %>

	public Class getFieldType(String name){
	<% for(var i in model.fields){ %>
	<% var field = model.fields[i]; %>
	<% var type = field.toJavaType(); %>
		if(name.equalsIgnoreCase("<%=field.name%>")) return <%=type%>.class;
		
	<% } %>
		return null;
	}

	public static <%=Hop.camelHump(model.name)%> fromJson(JsonElement element){
		<%=Hop.camelHump(model.name)%> val = new <%=Hop.camelHump(model.name)%>();
		val.readJson(element);
		return val;
	}
	
}

