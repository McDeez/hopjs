var patchTestCases=function(){
  if(typeof Hop!="undefined" && typeof Hop.TestCase!="undefined"){
   
		Hop.TestCase.blobFromURL=function(url,onComplete){
				var xhr = new XMLHttpRequest();
				xhr.open("get",url);
				xhr.responseType="blob";
				xhr.onload=function(e){
					if(this.response instanceof Blob){
						return onComplete(null,this.response);
					} else {
						return onComplete(null,new Blob([this.response]));
					}
				}	
				xhr.send();
		}
 
    Hop.TestCase.prototype.do=function(method,inputValue,onComplete){
			var xhrTasks = [];
			for(var i in inputValue){
				var input = inputValue[i];
				if(input!=null && input._fileFromURL!=null){
					xhrTasks.push({ url: input._fileFromURL, field: i });	
				}
			}

			var run = function(){
				if(xhrTasks.length>0){
					var xhrTask = xhrTasks.shift();
					Hop.TestCase.blobFromURL(xhrTask.url,function(err,blob){
						inputValue[xhrTask.field]=blob;	
						console.log("Got blob from",xhrTask.url,xhrTask.field);
						run();
					});
				} else {
					console.log(inputValue);
					try {
						(eval(method))(inputValue,onComplete);
					} catch(e){
						if(typeof eval(method)=="undefined"){
							return onComplete("Invalid method call:"+method);
						} else return onComplete(e);
					}	
				}
			}
			run();
    }
    Hop.TestCase.prototype.testResult=function(taskIndex,method,inputValue,err,outputValue,testType,result){
      console.log(arguments);
      if(Hop.TestCase.lastTaskIndex!=taskIndex){ 
        Hop.TestCase.resultIndex++; 
        $(Hop.TestCase.resultSelector).append("<p><div>#"+(taskIndex+1)+" "+method+"(<a href='#foo' onclick='$(\"#testResult_"+Hop.TestCase.resultIndex+"\").slideToggle();return false;'>Details</a>)</div><p>");
        Hop.TestCase.lastTaskIndex=taskIndex
        $(Hop.TestCase.resultSelector).append("<div class='testDetails' id='testResult_"+Hop.TestCase.resultIndex+"' style='display:none'><h4>Input</h4><div class='testInput'>"+JSON.stringify(inputValue)+"</div><h4>Error</h4><div class='testResultError'>"+err+"</div><h4>Result</h4><div class='testResult'>"+JSON.stringify(outputValue)+"</div><br></div>");
      } 
      
      var what = Hop.Tests[testType];
      if(what){ 
        if(result==false)
          $(Hop.TestCase.resultSelector).append("<div style='color:red'>"+what.fail+"</div>");
        else 
          $(Hop.TestCase.resultSelector).append("<div style='color:green'>"+what.pass+"</div>");
      } else {
        if(result==false)
          $(Hop.TestCase.resultSelector).append("<div style='color:red'>"+testType+"</div>");
        else 
          $(Hop.TestCase.resultSelector).append("<div style='color:green'>"+testType+"</div>");
      }
      if(result==true)
        Hop.TestCase.results.pass++
      else Hop.TestCase.results.fail++;
        
    }
  } else {
    setTimeout(patchTestCases,200);
  }
}
patchTestCases();
Hop.TestCase.resultSelector=null;
Hop.TestCase.runInDialog=function(what,selector){
  	
	$(selector).modal('show'); 
  Hop.TestCase.resultSelector=selector+" > .modal-body";
  Hop.TestCase.resultIndex=0;
  Hop.TestCase.lastTaskIndex=-1;
  Hop.TestCase.results={ pass:0, fail:0 };
	$(Hop.TestCase.resultSelector).empty();

  if(Hop.TestCases[what]){
    Hop.TestCase.run(what); 
    $(Hop.TestCase.resultSelector).append("<p>Passed: "+Hop.TestCase.results.pass+" Failed: "+Hop.TestCase.results.fail);
  } else {

    if(typeof what=="string" && what.length>0){
      var toRun=[];
      for(var i in Hop.TestCases){
        if(i.indexOf(what)==0){ 
          toRun.push(i);
        }
      }
    }  else {
      var toRun=Object.keys(Hop.TestCases);
    }

    var run=function(){
      if (toRun.length>0){
        var testCase = toRun.shift();
        $(Hop.TestCase.resultSelector).append("<h3>Running :"+testCase+"</h3>");
        Hop.TestCase.run(testCase,function(){ 
          console.log("Done running test cases");
          Hop.TestCase.lastTaskIndex=-1;
          run();
        });
      } else {
        $(Hop.TestCase.resultSelector).append("<p><span id='allTestResults'>Passed: "+Hop.TestCase.results.pass+" Failed: "+Hop.TestCase.results.fail+" "+((Hop.TestCase.results.pass/(Hop.TestCase.results.pass+Hop.TestCase.results.fail))*100.0).toFixed(1)+"%</span>");

      }
    }
   	run();
  }



}
